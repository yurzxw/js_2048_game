{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState || [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.score = 0;\n        this.history = [];\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"saveState\",\n            value: function saveState() {\n                if (!this.board) return;\n                this.history.push({\n                    board: this.board.map(function(row) {\n                        return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                    }),\n                    score: this.score\n                });\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                this.saveState();\n                var hasChanged = false;\n                this.board = this.board.map(function(row) {\n                    var rowWithoutZeros = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = 0; i < rowWithoutZeros.length; i++)if (rowWithoutZeros[i] === rowWithoutZeros[i + 1]) {\n                        rowWithoutZeros[i] *= 2;\n                        rowWithoutZeros[i + 1] = 0;\n                        _this.score += rowWithoutZeros[i];\n                        hasChanged = true;\n                    }\n                    var rowAfterMove = rowWithoutZeros.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(rowAfterMove.length < 4)rowAfterMove.push(0);\n                    if (rowAfterMove.join(\"\") !== row.join(\"\")) hasChanged = true;\n                    return rowAfterMove;\n                });\n                if (hasChanged) this.addRandomCell();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                this.saveState();\n                var hasChanged = false;\n                this.board = this.board.map(function(row) {\n                    var rowWithoutZeros = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = rowWithoutZeros.length - 1; i >= 0; i--)if (rowWithoutZeros[i] === rowWithoutZeros[i - 1]) {\n                        rowWithoutZeros[i] *= 2;\n                        rowWithoutZeros[i - 1] = 0;\n                        _this.score += rowWithoutZeros[i];\n                        hasChanged = true;\n                    }\n                    var rowAfterMove = rowWithoutZeros.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(rowAfterMove.length < 4)rowAfterMove.unshift(0);\n                    if (rowAfterMove.join(\"\") !== row.join(\"\")) hasChanged = true;\n                    return rowAfterMove;\n                });\n                if (hasChanged) this.addRandomCell();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                this.saveState();\n                var hasChanged = false;\n                var transonatedBoard = [\n                    [],\n                    [],\n                    [],\n                    []\n                ];\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++)transonatedBoard[col][row] = this.board[row][col];\n                transonatedBoard = transonatedBoard.map(function(row) {\n                    var rowWithoutZeros = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = 0; i < rowWithoutZeros.length; i++)if (rowWithoutZeros[i - 1] === rowWithoutZeros[i]) {\n                        rowWithoutZeros[i - 1] *= 2;\n                        rowWithoutZeros[i] = 0;\n                        _this.score += rowWithoutZeros[i - 1];\n                        hasChanged = true;\n                    }\n                    var rowAfterMove = rowWithoutZeros.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(rowAfterMove.length < 4)rowAfterMove.push(0);\n                    if (rowAfterMove.join(\"\") !== row.join(\"\")) hasChanged = true;\n                    return rowAfterMove;\n                });\n                for(var row1 = 0; row1 < 4; row1++)for(var col1 = 0; col1 < 4; col1++)this.board[row1][col1] = transonatedBoard[col1][row1];\n                if (hasChanged) this.addRandomCell();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                this.saveState();\n                var hasChanged = false;\n                var transonatedBoard = [\n                    [],\n                    [],\n                    [],\n                    []\n                ];\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++)transonatedBoard[col][row] = this.board[row][col];\n                transonatedBoard = transonatedBoard.map(function(row) {\n                    var rowWithoutZeros = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var i = rowWithoutZeros.length - 1; i >= 0; i--)if (rowWithoutZeros[i] === rowWithoutZeros[i - 1]) {\n                        rowWithoutZeros[i] *= 2;\n                        rowWithoutZeros[i - 1] = 0;\n                        _this.score += rowWithoutZeros[i];\n                        hasChanged = true;\n                    }\n                    var rowAfterMove = rowWithoutZeros.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(rowAfterMove.length < 4)rowAfterMove.unshift(0);\n                    if (rowAfterMove.join(\"\") !== row.join(\"\")) hasChanged = true;\n                    return rowAfterMove;\n                });\n                for(var row1 = 0; row1 < 4; row1++)for(var col1 = 0; col1 < 4; col1++)this.board[row1][col1] = transonatedBoard[col1][row1];\n                if (hasChanged) this.addRandomCell();\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                if (this.board.some(function(row) {\n                    return row.includes(2048);\n                })) return \"win\";\n                if (this.board.some(function(row) {\n                    return row.includes(0);\n                })) return \"playing\";\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    var cell = this.board[row][col];\n                    if (row < 3 && cell === this.board[row + 1][col] || col < 3 && cell === this.board[row][col + 1]) return \"playing\";\n                }\n                return \"lose\";\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n                this.addRandomCell();\n                this.addRandomCell();\n                this.status = \"playing\";\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.start();\n            }\n        },\n        {\n            // Add your own methods here\n            key: \"addRandomCell\",\n            value: function addRandomCell() {\n                var emtyCells = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.board[row][col] === 0) emtyCells.push({\n                        row: row,\n                        col: col\n                    });\n                }\n                if (emtyCells.length > 0) {\n                    var randomCell = Math.floor(Math.random() * emtyCells.length);\n                    var _emtyCells_randomCell = emtyCells[randomCell], row1 = _emtyCells_randomCell.row, col1 = _emtyCells_randomCell.col;\n                    var newValue = Math.random() < 0.9 ? 2 : 4;\n                    this.board[row1][col1] = newValue;\n                }\n            }\n        },\n        {\n            key: \"undo\",\n            value: function undo() {\n                if (this.history.length > 0) {\n                    var lastState = this.history.pop();\n                    this.board = lastState.board;\n                    this.score = lastState.score;\n                } else alert(\"Undo is not available\");\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nfunction $197cd56b15c33885$var$renderBoard() {\n    var _loop = function(row) {\n        var _loop = function(col) {\n            var cell = rows[row].children[col];\n            var value = board[row][col];\n            if (cell.textContent !== value && value !== 0) {\n                cell.style.animation = \"tile-pop 0.3s ease\";\n                cell.addEventListener(\"animationend\", function() {\n                    cell.style.animation = \"\";\n                });\n            }\n            cell.style.animation = $197cd56b15c33885$var$game.getStatus() === \"lose\" ? \"none\" : \"tile-pop 0.3s ease\";\n            cell.textContent = value === 0 ? \"\" : value;\n            cell.className = \"field-cell\";\n            if (value !== 0) cell.classList.add(\"field-cell--\".concat(value));\n        };\n        for(var col = 0; col < 4; col++)_loop(col);\n    };\n    var board = $197cd56b15c33885$var$game.getState();\n    var rows = (0, $227c6742e0ff6f82$export$71511d61b312f219)(document.querySelectorAll(\".field-row\"));\n    for(var row = 0; row < 4; row++)_loop(row);\n    var gameScore = document.querySelector(\".game-score\");\n    var winMessage = document.querySelector(\".message-win\");\n    gameScore.textContent = $197cd56b15c33885$var$game.getScore();\n    var loseMessage = document.querySelector(\".message-lose\");\n    if ($197cd56b15c33885$var$game.getStatus() === \"lose\") loseMessage.classList.remove(\"hidden\");\n    if ($197cd56b15c33885$var$game.getStatus() === \"win\") winMessage.classList.remove(\"hidden\");\n    if ($197cd56b15c33885$var$game.getStatus() === \"playing\") {\n        winMessage.classList.add(\"hidden\");\n        loseMessage.classList.add(\"hidden\");\n    }\n}\nvar $197cd56b15c33885$var$start = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$started = false;\n$197cd56b15c33885$var$start.addEventListener(\"click\", function(e) {\n    if (!$197cd56b15c33885$var$started) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$started = true;\n        $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$start.classList.add(\"hidden\");\n        $197cd56b15c33885$var$start.classList.remove(\"start\");\n        $197cd56b15c33885$var$start.classList.add(\"restart\");\n        $197cd56b15c33885$var$start.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$start.textContent = \"Restart\";\n        $197cd56b15c33885$var$renderBoard();\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$undoSum = 0;\n        $197cd56b15c33885$var$game.history = [];\n        if (!$197cd56b15c33885$var$undoMessage.classList.contains(\"hidden\")) $197cd56b15c33885$var$undoMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$renderBoard();\n    }\n});\nwindow.addEventListener(\"keydown\", function(e) {\n    if (!$197cd56b15c33885$var$started) return;\n    e.preventDefault();\n    switch(e.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    $197cd56b15c33885$var$renderBoard();\n});\nvar $197cd56b15c33885$var$gameField = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$startX = 0;\nvar $197cd56b15c33885$var$startY = 0;\nvar $197cd56b15c33885$var$endX = 0;\nvar $197cd56b15c33885$var$endY = 0;\n$197cd56b15c33885$var$gameField.addEventListener(\"touchstart\", function(e) {\n    $197cd56b15c33885$var$startX = e.touches[0].clientX;\n    $197cd56b15c33885$var$startY = e.touches[0].clientY;\n});\n$197cd56b15c33885$var$gameField.addEventListener(\"touchmove\", function(e) {\n    $197cd56b15c33885$var$endX = e.touches[0].clientX;\n    $197cd56b15c33885$var$endY = e.touches[0].clientY;\n});\n$197cd56b15c33885$var$gameField.addEventListener(\"touchend\", function() {\n    var diffX = $197cd56b15c33885$var$endX - $197cd56b15c33885$var$startX;\n    var diffY = $197cd56b15c33885$var$endY - $197cd56b15c33885$var$startY;\n    if (Math.abs(diffX) > Math.abs(diffY)) {\n        if (diffX > 30) $197cd56b15c33885$var$handleSwipe(\"right\");\n        else if (diffX < -30) $197cd56b15c33885$var$handleSwipe(\"left\");\n    } else {\n        if (diffY > 30) $197cd56b15c33885$var$handleSwipe(\"down\");\n        else if (diffY < -30) $197cd56b15c33885$var$handleSwipe(\"up\");\n    }\n    $197cd56b15c33885$var$startX = 0;\n    $197cd56b15c33885$var$startY = 0;\n    $197cd56b15c33885$var$endX = 0;\n    $197cd56b15c33885$var$endY = 0;\n});\nfunction $197cd56b15c33885$var$handleSwipe(direction) {\n    switch(direction){\n        case \"up\":\n            $197cd56b15c33885$var$game.moveUp();\n            $197cd56b15c33885$var$renderBoard();\n            break;\n        case \"down\":\n            $197cd56b15c33885$var$game.moveDown();\n            $197cd56b15c33885$var$renderBoard();\n            break;\n        case \"left\":\n            $197cd56b15c33885$var$game.moveLeft();\n            $197cd56b15c33885$var$renderBoard();\n            break;\n        case \"right\":\n            $197cd56b15c33885$var$game.moveRight();\n            $197cd56b15c33885$var$renderBoard();\n            break;\n    }\n}\nvar $197cd56b15c33885$var$undoSum = 0;\nvar $197cd56b15c33885$var$undoMessage = document.querySelector(\".message-undo\");\nvar $197cd56b15c33885$var$undo = document.querySelector(\".undo\");\n$197cd56b15c33885$var$undo.addEventListener(\"click\", function(e) {\n    $197cd56b15c33885$var$undoSum++;\n    if ($197cd56b15c33885$var$undoSum < 4) {\n        $197cd56b15c33885$var$game.undo();\n        $197cd56b15c33885$var$renderBoard();\n    } else {\n        $197cd56b15c33885$var$undoMessage.classList.remove(\"hidden\");\n        setTimeout(function() {\n            $197cd56b15c33885$var$undoMessage.classList.add(\"hidden\");\n        }, 5000);\n    }\n});\n\n})();\n//# sourceMappingURL=index.8a613152.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nfunction renderBoard() {\n  const board = game.getState();\n  const rows = [...document.querySelectorAll('.field-row')];\n\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      const cell = rows[row].children[col];\n      const value = board[row][col];\n\n      if (cell.textContent !== value && value !== 0) {\n        cell.style.animation = 'tile-pop 0.3s ease';\n\n        cell.addEventListener('animationend', () => {\n          cell.style.animation = '';\n        });\n      }\n\n      cell.style.animation =\n        game.getStatus() === 'lose' ? 'none' : 'tile-pop 0.3s ease';\n\n      cell.textContent = value === 0 ? '' : value;\n\n      cell.className = 'field-cell';\n\n      if (value !== 0) {\n        cell.classList.add(`field-cell--${value}`);\n      }\n    }\n  }\n\n  const gameScore = document.querySelector('.game-score');\n  const winMessage = document.querySelector('.message-win');\n\n  gameScore.textContent = game.getScore();\n\n  const loseMessage = document.querySelector('.message-lose');\n\n  if (game.getStatus() === 'lose') {\n    loseMessage.classList.remove('hidden');\n  }\n\n  if (game.getStatus() === 'win') {\n    winMessage.classList.remove('hidden');\n  }\n\n  if (game.getStatus() === 'playing') {\n    winMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n  }\n}\n\nconst start = document.querySelector('.button');\nconst startMessage = document.querySelector('.message-start');\nlet started = false;\n\nstart.addEventListener('click', (e) => {\n  if (!started) {\n    game.start();\n    started = true;\n    startMessage.classList.add('hidden');\n    start.classList.add('hidden');\n    start.classList.remove('start');\n    start.classList.add('restart');\n    start.classList.remove('hidden');\n    start.textContent = 'Restart';\n\n    renderBoard();\n  } else {\n    game.restart();\n    undoSum = 0;\n    game.history = [];\n\n    if (!undoMessage.classList.contains('hidden')) {\n      undoMessage.classList.add('hidden');\n    }\n    renderBoard();\n  }\n});\n\nwindow.addEventListener('keydown', (e) => {\n  if (!started) {\n    return;\n  }\n  e.preventDefault();\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n\n    default:\n      return;\n  }\n  renderBoard();\n});\n\nconst gameField = document.querySelector('.game-field');\nlet startX = 0;\nlet startY = 0;\nlet endX = 0;\nlet endY = 0;\n\ngameField.addEventListener('touchstart', (e) => {\n  startX = e.touches[0].clientX;\n  startY = e.touches[0].clientY;\n});\n\ngameField.addEventListener('touchmove', (e) => {\n  endX = e.touches[0].clientX;\n  endY = e.touches[0].clientY;\n});\n\ngameField.addEventListener('touchend', () => {\n  const diffX = endX - startX;\n  const diffY = endY - startY;\n\n  if (Math.abs(diffX) > Math.abs(diffY)) {\n    if (diffX > 30) {\n      handleSwipe('right');\n    } else if (diffX < -30) {\n      handleSwipe('left');\n    }\n  } else {\n    if (diffY > 30) {\n      handleSwipe('down');\n    } else if (diffY < -30) {\n      handleSwipe('up');\n    }\n  }\n  startX = 0;\n  startY = 0;\n  endX = 0;\n  endY = 0;\n});\n\nfunction handleSwipe(direction) {\n  switch (direction) {\n    case 'up':\n      game.moveUp();\n      renderBoard();\n      break;\n    case 'down':\n      game.moveDown();\n      renderBoard();\n\n      break;\n    case 'left':\n      game.moveLeft();\n      renderBoard();\n\n      break;\n    case 'right':\n      game.moveRight();\n      renderBoard();\n\n      break;\n  }\n}\n\nlet undoSum = 0;\nconst undoMessage = document.querySelector('.message-undo');\n\nconst undo = document.querySelector('.undo');\n\nundo.addEventListener('click', (e) => {\n  undoSum++;\n\n  if (undoSum < 4) {\n    game.undo();\n    renderBoard();\n  } else {\n    undoMessage.classList.remove('hidden');\n\n    setTimeout(() => {\n      undoMessage.classList.add('hidden');\n    }, 5000);\n  }\n});\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState) {\n    this.board = initialState || [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n    this.history = [];\n  }\n  saveState() {\n    if (!this.board) {\n      return;\n    }\n\n    this.history.push({\n      board: this.board.map((row) => [...row]),\n      score: this.score,\n    });\n  }\n\n  moveLeft() {\n    this.saveState();\n\n    let hasChanged = false;\n\n    this.board = this.board.map((row) => {\n      const rowWithoutZeros = row.filter((cell) => cell !== 0);\n\n      for (let i = 0; i < rowWithoutZeros.length; i++) {\n        if (rowWithoutZeros[i] === rowWithoutZeros[i + 1]) {\n          rowWithoutZeros[i] *= 2;\n          rowWithoutZeros[i + 1] = 0;\n          this.score += rowWithoutZeros[i];\n          hasChanged = true;\n        }\n      }\n\n      const rowAfterMove = rowWithoutZeros.filter((cell) => cell !== 0);\n\n      while (rowAfterMove.length < 4) {\n        rowAfterMove.push(0);\n      }\n\n      if (rowAfterMove.join('') !== row.join('')) {\n        hasChanged = true;\n      }\n\n      return rowAfterMove;\n    });\n\n    if (hasChanged) {\n      this.addRandomCell();\n    }\n  }\n  moveRight() {\n    this.saveState();\n\n    let hasChanged = false;\n\n    this.board = this.board.map((row) => {\n      const rowWithoutZeros = row.filter((cell) => cell !== 0);\n\n      for (let i = rowWithoutZeros.length - 1; i >= 0; i--) {\n        if (rowWithoutZeros[i] === rowWithoutZeros[i - 1]) {\n          rowWithoutZeros[i] *= 2;\n          rowWithoutZeros[i - 1] = 0;\n          this.score += rowWithoutZeros[i];\n          hasChanged = true;\n        }\n      }\n\n      const rowAfterMove = rowWithoutZeros.filter((cell) => cell !== 0);\n\n      while (rowAfterMove.length < 4) {\n        rowAfterMove.unshift(0);\n      }\n\n      if (rowAfterMove.join('') !== row.join('')) {\n        hasChanged = true;\n      }\n\n      return rowAfterMove;\n    });\n\n    if (hasChanged) {\n      this.addRandomCell();\n    }\n  }\n  moveUp() {\n    this.saveState();\n\n    let hasChanged = false;\n    let transonatedBoard = [[], [], [], []];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        transonatedBoard[col][row] = this.board[row][col];\n      }\n    }\n\n    transonatedBoard = transonatedBoard.map((row) => {\n      const rowWithoutZeros = row.filter((cell) => cell !== 0);\n\n      for (let i = 0; i < rowWithoutZeros.length; i++) {\n        if (rowWithoutZeros[i - 1] === rowWithoutZeros[i]) {\n          rowWithoutZeros[i - 1] *= 2;\n          rowWithoutZeros[i] = 0;\n          this.score += rowWithoutZeros[i - 1];\n          hasChanged = true;\n        }\n      }\n\n      const rowAfterMove = rowWithoutZeros.filter((cell) => cell !== 0);\n\n      while (rowAfterMove.length < 4) {\n        rowAfterMove.push(0);\n      }\n\n      if (rowAfterMove.join('') !== row.join('')) {\n        hasChanged = true;\n      }\n\n      return rowAfterMove;\n    });\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        this.board[row][col] = transonatedBoard[col][row];\n      }\n    }\n\n    if (hasChanged) {\n      this.addRandomCell();\n    }\n  }\n\n  moveDown() {\n    this.saveState();\n\n    let hasChanged = false;\n    let transonatedBoard = [[], [], [], []];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        transonatedBoard[col][row] = this.board[row][col];\n      }\n    }\n\n    transonatedBoard = transonatedBoard.map((row) => {\n      const rowWithoutZeros = row.filter((cell) => cell !== 0);\n\n      for (let i = rowWithoutZeros.length - 1; i >= 0; i--) {\n        if (rowWithoutZeros[i] === rowWithoutZeros[i - 1]) {\n          rowWithoutZeros[i] *= 2;\n          rowWithoutZeros[i - 1] = 0;\n          this.score += rowWithoutZeros[i];\n          hasChanged = true;\n        }\n      }\n\n      const rowAfterMove = rowWithoutZeros.filter((cell) => cell !== 0);\n\n      while (rowAfterMove.length < 4) {\n        rowAfterMove.unshift(0);\n      }\n\n      if (rowAfterMove.join('') !== row.join('')) {\n        hasChanged = true;\n      }\n\n      return rowAfterMove;\n    });\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        this.board[row][col] = transonatedBoard[col][row];\n      }\n    }\n\n    if (hasChanged) {\n      this.addRandomCell();\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.board.map((row) => [...row]);\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    if (this.board.some((row) => row.includes(2048))) {\n      return 'win';\n    }\n\n    if (this.board.some((row) => row.includes(0))) {\n      return 'playing';\n    }\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const cell = this.board[row][col];\n\n        if (\n          (row < 3 && cell === this.board[row + 1][col]) ||\n          (col < 3 && cell === this.board[row][col + 1])\n        ) {\n          return 'playing';\n        }\n      }\n    }\n\n    return 'lose';\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    this.score = 0;\n    this.addRandomCell();\n    this.addRandomCell();\n    this.status = 'playing';\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.start();\n  }\n\n  // Add your own methods here\n  addRandomCell() {\n    const emtyCells = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          emtyCells.push({ row, col });\n        }\n      }\n    }\n\n    if (emtyCells.length > 0) {\n      const randomCell = Math.floor(Math.random() * emtyCells.length);\n      const { row, col } = emtyCells[randomCell];\n      const newValue = Math.random() < 0.9 ? 2 : 4;\n\n      this.board[row][col] = newValue;\n    }\n  }\n\n  undo() {\n    if (this.history.length > 0) {\n      const lastState = this.history.pop();\n\n      this.board = lastState.board;\n      this.score = lastState.score;\n    } else {\n      alert('Undo is not available');\n    }\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","Constructor","board","score","history","key","value","push","map","row","_this","saveState","hasChanged","rowWithoutZeros","filter","cell","rowAfterMove","join","addRandomCell","unshift","transonatedBoard","col","row1","col1","some","includes","status","start","emtyCells","randomCell","Math","floor","random","_emtyCells_randomCell","newValue","lastState","pop","alert","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$renderBoard","_loop","rows","children","textContent","style","animation","addEventListener","getStatus","className","classList","add","concat","getState","document","querySelectorAll","gameScore","querySelector","winMessage","getScore","loseMessage","remove","$197cd56b15c33885$var$start","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$started","e","restart","$197cd56b15c33885$var$undoSum","$197cd56b15c33885$var$undoMessage","contains","window","preventDefault","moveLeft","moveRight","moveUp","moveDown","$197cd56b15c33885$var$gameField","$197cd56b15c33885$var$startX","$197cd56b15c33885$var$startY","$197cd56b15c33885$var$endX","$197cd56b15c33885$var$endY","$197cd56b15c33885$var$handleSwipe","direction","touches","clientX","clientY","diffX","diffY","abs","$197cd56b15c33885$var$undo","undo","setTimeout"],"version":3,"file":"index.8a613152.js.map"}